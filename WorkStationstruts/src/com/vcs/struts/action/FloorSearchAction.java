/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.vcs.struts.action;

import java.lang.reflect.InvocationTargetException;
import java.util.ArrayList;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.sun.org.apache.commons.beanutils.BeanUtils;
import com.vcs.struts.constants.WSContants;
import com.vcs.struts.dao.FloorDao;
import com.vcs.struts.floor.Floor;
import com.vcs.struts.form.FloorForm;

public class FloorSearchAction extends Action {

	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		FloorForm floorForm = (FloorForm) form;
		System.out.println("floorId:" + floorForm.getFloorId());

		FloorDao floorDao = new FloorDao();
		List floorList = new ArrayList();
		Floor floor = new Floor();
		try {
			BeanUtils.copyProperties(floor, floorForm);
		} catch (IllegalAccessException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		} catch (InvocationTargetException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}

		String status = "";
		String id = request.getParameter("floorId");
		int floorId = 0;
		int noOfRecords = 0;
		int pageNum = 1;
		int recordsPerPage = WSContants.RECORDS_PER_PAGE;

		if (id != null && !"".equals(id)) {
			floorId = Integer.parseInt(id);
		}

		if (request.getParameter("page") != null) {
			pageNum = Integer.parseInt(request.getParameter("page"));
		}

		int startRow = (recordsPerPage * pageNum - (recordsPerPage)) + 1;
		int endRow = (recordsPerPage * pageNum);

		FloorDao floorSearch = new FloorDao();

		try {
			floorList = floorSearch.search(floorId, startRow, endRow);
			noOfRecords = floorSearch.getCount(floorId);
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

		int noOfPages = (int) Math.ceil(noOfRecords * 1.0 / recordsPerPage);

		if (floorList.size() > 0) {
			request.setAttribute("floorList", floorList);
			request.setAttribute("noOfPages", noOfPages);
			request.setAttribute("currentPage", pageNum);
			request.setAttribute("noOfRecords", noOfRecords);
			
		} else {
			request.setAttribute("status", status);
		}
		return mapping.findForward("success");
	}
}